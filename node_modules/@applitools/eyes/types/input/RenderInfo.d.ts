import { BrowserType } from '../enums/BrowserType';
import { DeviceName } from '../enums/DeviceName';
import { IosDeviceName } from '../enums/IosDeviceName';
import { IosVersion } from '../enums/IosVersion';
import { AndroidDeviceName } from '../enums/AndroidDeviceName';
import { AndroidVersion } from '../enums/AndroidVersion';
import { ScreenOrientation } from '../enums/ScreenOrientation';
import { IosMultiDeviceTarget } from '../enums/IosMultiDeviceTarget';
type RenderInfoBase = {
    /** @internal */
    hostOS?: string;
    /** @internal */
    hostOSInfo?: string;
    /** @internal */
    hostApp?: string;
    /** @internal */
    hostAppInfo?: string;
};
export type DesktopBrowserInfo = {
    name?: BrowserType;
    width: number;
    height: number;
};
export type ChromeEmulationInfo = {
    chromeEmulationInfo: {
        deviceName: DeviceName;
        screenOrientation?: ScreenOrientation;
    };
};
/** @deprecated */
export type ChromeEmulationInfoLegacy = {
    deviceName: DeviceName;
    screenOrientation?: ScreenOrientation;
};
export type IOSDeviceInfo = {
    iosDeviceInfo: {
        deviceName: IosDeviceName;
        iosVersion?: IosVersion;
        screenOrientation?: ScreenOrientation;
    };
};
export type AndroidDeviceInfo = {
    androidDeviceInfo: {
        deviceName: AndroidDeviceName;
        version?: AndroidVersion;
        screenOrientation?: ScreenOrientation;
    };
};
export type IOSMultiDeviceInfo = {
    deviceName: IosMultiDeviceTarget;
};
export type RenderInfoLegacy = RenderInfoBase & (DesktopBrowserInfo | ChromeEmulationInfo | IOSDeviceInfo | AndroidDeviceInfo | ChromeEmulationInfoLegacy);
export type RenderInfo = RenderInfoBase & (DesktopBrowserInfo | ChromeEmulationInfo | IOSDeviceInfo | AndroidDeviceInfo | IOSMultiDeviceInfo);
export {};
