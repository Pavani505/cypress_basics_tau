import type { DriverTarget, Core, SnapshotSettings, Account, Snapshot } from './types';
import { type Environment as UFGEnvironment } from '@applitools/ufg-client';
import { type AbortSignal } from 'abort-controller';
import { type Logger } from '@applitools/logger';
import { type SpecType, type SpecDriver } from '@applitools/driver';
type Options<TSpec extends SpecType> = {
    core: Core<TSpec>;
    spec: SpecDriver<TSpec>;
    signal?: AbortSignal;
    logger: Logger;
};
export declare function makeTakeSnapshots<TSpec extends SpecType>({ core, spec, signal, logger: mainLogger }: Options<TSpec>): ({ target, settings, environments: defaultEnvironments, account, logger, }: {
    target: DriverTarget<TSpec>;
    settings?: SnapshotSettings<TSpec> | undefined;
    environments?: UFGEnvironment[] | undefined;
    account: Account;
    logger?: Logger | undefined;
}) => Promise<Snapshot[]>;
export {};
